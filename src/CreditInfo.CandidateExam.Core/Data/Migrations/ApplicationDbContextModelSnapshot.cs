// <auto-generated />
using System;
using CreditInfo.CandidateExam.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CreditInfo.CandidateExam.Core.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CreditInfo.CandidateExam.Core.Entities.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContractCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAccountOpened")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfLastPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NextPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseOfContract")
                        .HasColumnType("int");

                    b.Property<DateTime>("RealEndDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("CreditInfo.CandidateExam.Core.Entities.Individual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Individuals");
                });

            modelBuilder.Entity("CreditInfo.CandidateExam.Core.Entities.SubjectRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleOfCustomer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("SubjectRoles");
                });

            modelBuilder.Entity("CreditInfo.CandidateExam.Core.Entities.Contract", b =>
                {
                    b.OwnsOne("CreditInfo.CandidateExam.Core.Entities.Amount", "CurrentBalance", b1 =>
                        {
                            b1.Property<Guid>("ContractId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Currency")
                                .HasColumnType("int");

                            b1.Property<decimal>("Value")
                                .HasPrecision(18, 4)
                                .HasColumnType("decimal(18,4)");

                            b1.HasKey("ContractId");

                            b1.ToTable("Contracts");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsOne("CreditInfo.CandidateExam.Core.Entities.Amount", "InstallmentAmount", b1 =>
                        {
                            b1.Property<Guid>("ContractId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Currency")
                                .HasColumnType("int");

                            b1.Property<decimal>("Value")
                                .HasPrecision(18, 4)
                                .HasColumnType("decimal(18,4)");

                            b1.HasKey("ContractId");

                            b1.ToTable("Contracts");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsOne("CreditInfo.CandidateExam.Core.Entities.Amount", "OriginalAmount", b1 =>
                        {
                            b1.Property<Guid>("ContractId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Currency")
                                .HasColumnType("int");

                            b1.Property<decimal>("Value")
                                .HasPrecision(18, 4)
                                .HasColumnType("decimal(18,4)");

                            b1.HasKey("ContractId");

                            b1.ToTable("Contracts");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsOne("CreditInfo.CandidateExam.Core.Entities.Amount", "OverdueBalance", b1 =>
                        {
                            b1.Property<Guid>("ContractId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Currency")
                                .HasColumnType("int");

                            b1.Property<decimal>("Value")
                                .HasPrecision(18, 4)
                                .HasColumnType("decimal(18,4)");

                            b1.HasKey("ContractId");

                            b1.ToTable("Contracts");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.Navigation("CurrentBalance");

                    b.Navigation("InstallmentAmount");

                    b.Navigation("OriginalAmount");

                    b.Navigation("OverdueBalance");
                });

            modelBuilder.Entity("CreditInfo.CandidateExam.Core.Entities.Individual", b =>
                {
                    b.HasOne("CreditInfo.CandidateExam.Core.Entities.Contract", "Contract")
                        .WithMany("Individuals")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("CreditInfo.CandidateExam.Core.Entities.IdentificationNumbers", "IdentificationNumbers", b1 =>
                        {
                            b1.Property<int>("IndividualId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("NationalID")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("IndividualId");

                            b1.ToTable("Individuals");

                            b1.WithOwner()
                                .HasForeignKey("IndividualId");
                        });

                    b.Navigation("Contract");

                    b.Navigation("IdentificationNumbers");
                });

            modelBuilder.Entity("CreditInfo.CandidateExam.Core.Entities.SubjectRole", b =>
                {
                    b.HasOne("CreditInfo.CandidateExam.Core.Entities.Contract", "Contract")
                        .WithMany("SubjectRoles")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("CreditInfo.CandidateExam.Core.Entities.Contract", b =>
                {
                    b.Navigation("Individuals");

                    b.Navigation("SubjectRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
